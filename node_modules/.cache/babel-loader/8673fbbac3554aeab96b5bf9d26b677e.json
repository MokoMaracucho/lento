{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/Lento.EU/BitBucket/lentoeu_frontend_webapp/lento-eu-react/src/Validations/LivingPlaceRegistrationStep2.js\";\nimport React from 'react';\nimport { TextField } from '@mui/material';\nimport { InputLabel, Radio, Select } from '@material-ui/core';\nimport { FormControlLabel, FormLabel, MenuItem, RadioGroup } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LivingPlaceRegistrationStep2 = () => {\n  const country_ARRAY = [{\n    value: 'BE',\n    label: 'Belgium'\n  }, {\n    value: 'BG',\n    label: 'Bulgaria'\n  }, {\n    value: 'CZ',\n    label: 'Czech Republic'\n  }, {\n    value: 'DK',\n    label: 'Denmark'\n  }, {\n    value: 'DE',\n    label: 'Germany'\n  }, {\n    value: 'EE',\n    label: 'Estonia'\n  }, {\n    value: 'IE',\n    label: 'Ireland'\n  }, {\n    value: 'EL',\n    label: 'Greece'\n  }, {\n    value: 'ES',\n    label: 'SPAIN'\n  }, {\n    value: 'FR',\n    label: 'France'\n  }, {\n    value: 'HR',\n    label: 'Croatia'\n  }, {\n    value: 'IT',\n    label: 'Italy'\n  }, {\n    value: 'CY',\n    label: 'Cyprus'\n  }, {\n    value: 'LV',\n    label: 'Latvia'\n  }, {\n    value: 'LT',\n    label: 'Lithuania'\n  }, {\n    value: 'LU',\n    label: 'Luxembourg'\n  }, {\n    value: 'HU',\n    label: 'Hungary'\n  }, {\n    value: 'MT',\n    label: 'Malta'\n  }, {\n    value: 'NL',\n    label: 'The Nederlands'\n  }, {\n    value: 'AT',\n    label: 'Austria'\n  }, {\n    value: 'PL',\n    label: 'Poland'\n  }, {\n    value: 'PT',\n    label: 'Portugal'\n  }, {\n    value: 'RO',\n    label: 'Romania'\n  }, {\n    value: 'Si',\n    label: 'Slovania'\n  }, {\n    value: 'SK',\n    label: 'Slovakia'\n  }, {\n    value: 'FI',\n    label: 'Finland'\n  }, {\n    value: 'SE',\n    label: 'Sweden'\n  }, {\n    value: 'UK',\n    label: 'United Kingdom'\n  }, {\n    value: 'ME',\n    label: 'Montenegro'\n  }, {\n    value: 'IS',\n    label: 'Iceland'\n  }, {\n    value: 'MK',\n    label: 'Macedonia'\n  }, {\n    value: 'AL',\n    label: 'Albania'\n  }, {\n    value: 'RS',\n    label: 'Serbia'\n  }, {\n    value: 'TR',\n    label: 'Turkey'\n  }, {\n    value: 'MD',\n    label: 'Moldavia'\n  }, {\n    value: 'AM',\n    label: 'Armenia'\n  }, {\n    value: 'BY',\n    label: 'Belarus'\n  }, {\n    value: 'AD',\n    label: 'Andorra'\n  }, {\n    value: 'MC',\n    label: 'Monaco'\n  }, {\n    value: 'SM',\n    label: 'San Marino'\n  }, {\n    value: 'VA',\n    label: 'Vatican City'\n  }, {\n    value: 'UA',\n    label: 'Ukraine'\n  }, {\n    value: 'XK',\n    label: 'Kosovo'\n  }, {\n    value: 'BA',\n    label: 'Bosnia and Herzegovina'\n  }, {\n    value: 'CH',\n    label: 'Switzerland'\n  }, {\n    value: 'LI',\n    label: 'Liechtenstein'\n  }, {\n    value: 'NO',\n    label: 'Norway'\n  }];\n  const phone_number_landcode_ARRAY = [{\n    value: 'BE',\n    label: 'Belgium, +32'\n  }, {\n    value: 'BG',\n    label: 'Bulgaria, +359'\n  }, {\n    value: 'CZ',\n    label: 'Czech Republic, +420'\n  }, {\n    value: 'DK',\n    label: 'Denmark, +45'\n  }, {\n    value: 'DE',\n    label: 'Germany, +49'\n  }, {\n    value: 'EE',\n    label: 'Estonia, +372'\n  }, {\n    value: 'IE',\n    label: 'Ireland, +353'\n  }, {\n    value: 'EL',\n    label: 'Greece, +30'\n  }, {\n    value: 'ES',\n    label: 'Spain, +34'\n  }, {\n    value: 'FR',\n    label: 'France, +33'\n  }, {\n    value: 'HR',\n    label: 'Croatia, +385'\n  }, {\n    value: 'IT',\n    label: 'Italy, +39'\n  }, {\n    value: 'CY',\n    label: 'Cyprus, +357'\n  }, {\n    value: 'LV',\n    label: 'Latvia, +371'\n  }, {\n    value: 'LT',\n    label: 'Lithuania, +370'\n  }, {\n    value: 'LU',\n    label: 'Luxembourg, +352'\n  }, {\n    value: 'HU',\n    label: 'Hungary, +36'\n  }, {\n    value: 'MT',\n    label: 'Malta, +356'\n  }, {\n    value: 'NL',\n    label: 'The Nederlands, +31'\n  }, {\n    value: 'AT',\n    label: 'Austria, +43'\n  }, {\n    value: 'PL',\n    label: 'Poland, +48'\n  }, {\n    value: 'PT',\n    label: 'Portugal, +351'\n  }, {\n    value: 'RO',\n    label: 'Romania, +40'\n  }, {\n    value: 'Si',\n    label: 'Slovania, +386'\n  }, {\n    value: 'SK',\n    label: 'Slovakia, +421'\n  }, {\n    value: 'FI',\n    label: 'Finland, +358'\n  }, {\n    value: 'SE',\n    label: 'Sweden, +46'\n  }, {\n    value: 'UK',\n    label: 'United Kingdom, +44'\n  }, {\n    value: 'ME',\n    label: 'Montenegro, +382'\n  }, {\n    value: 'IS',\n    label: 'Iceland, +354'\n  }, {\n    value: 'MK',\n    label: 'Macedonia, +389'\n  }, {\n    value: 'AL',\n    label: 'Albania, +355'\n  }, {\n    value: 'RS',\n    label: 'Serbia, +381'\n  }, {\n    value: 'TR',\n    label: 'Turkey, +90'\n  }, {\n    value: 'MD',\n    label: 'Moldavia, +373'\n  }, {\n    value: 'AM',\n    label: 'Armenia, +374'\n  }, {\n    value: 'BY',\n    label: 'Belarus, +375'\n  }, {\n    value: 'AD',\n    label: 'Andorra, +376'\n  }, {\n    value: 'MC',\n    label: 'Monaco, +377'\n  }, {\n    value: 'SM',\n    label: 'San Marino, +378'\n  }, {\n    value: 'VA',\n    label: 'Vatican City, +379'\n  }, {\n    value: 'UA',\n    label: 'Ukraine, +380'\n  }, {\n    value: 'XK',\n    label: 'Kosovo, +383'\n  }, {\n    value: 'BA',\n    label: 'Bosnia and Herzegovina, +387'\n  }, {\n    value: 'CH',\n    label: 'Switzerland, +41'\n  }, {\n    value: 'LI',\n    label: 'Liechtenstein, +423'\n  }, {\n    value: 'NO',\n    label: 'Norway, +47'\n  }];\n  const facility_type_ARRAY = [{\n    value: 'kitchen',\n    label: 'Kitchen'\n  }, {\n    value: 'bathroom',\n    label: 'Bathroom'\n  }, {\n    value: 'supermarket',\n    label: 'Supermarket'\n  }, {\n    value: 'fitness',\n    label: 'Fitness'\n  }, {\n    value: 'common_room',\n    label: 'Common room'\n  }, {\n    value: 'reception_office',\n    label: 'Reception / Office'\n  }, {\n    value: 'laundry',\n    label: 'Laundry'\n  }, {\n    value: 'relax',\n    label: 'Relax'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__div\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Complex name\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Street\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"House number\",\n        inputProps: {\n          inputMode: 'numeric',\n          pattern: '[0-9]*'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"City\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"country__label\",\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"country__label\",\n        id: \"country__id\"\n        /* value={} */\n        ,\n        label: \"country\"\n        /* onChange={handleChange} */\n        ,\n        children: existingComplexes__array.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item.value,\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Postal code\",\n        inputProps: {\n          inputMode: 'numeric',\n          pattern: '[0-9]*'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"existingComplex__label\",\n        children: \"Existing complexes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"existingComplex__label\",\n        id: \"existingComplex__id\"\n        /* value={} */\n        ,\n        label: \"existingComplex\"\n        /* onChange={handleChange} */\n        ,\n        children: existingComplexes__array.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item.value,\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = LivingPlaceRegistrationStep2;\nexport default LivingPlaceRegistrationStep2;\n\nvar _c;\n\n$RefreshReg$(_c, \"LivingPlaceRegistrationStep2\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/Lento.EU/BitBucket/lentoeu_frontend_webapp/lento-eu-react/src/Validations/LivingPlaceRegistrationStep2.js"],"names":["React","TextField","InputLabel","Radio","Select","FormControlLabel","FormLabel","MenuItem","RadioGroup","LivingPlaceRegistrationStep2","country_ARRAY","value","label","phone_number_landcode_ARRAY","facility_type_ARRAY","inputMode","pattern","existingComplexes__array","map","item"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { TextField } from '@mui/material'\nimport { InputLabel, Radio, Select } from '@material-ui/core'\nimport { FormControlLabel, FormLabel, MenuItem, RadioGroup } from '@mui/material'\n\nconst LivingPlaceRegistrationStep2 = () => {\n\n    const country_ARRAY = [\n        {\n            value: 'BE',\n            label: 'Belgium'\n        },\n        {\n            value: 'BG',\n            label: 'Bulgaria'\n        },\n        {\n            value: 'CZ',\n            label: 'Czech Republic'\n        },\n        {\n            value: 'DK',\n            label: 'Denmark'\n        },\n        {\n            value: 'DE',\n            label: 'Germany'\n        },\n        {\n            value: 'EE',\n            label: 'Estonia'\n        },\n        {\n            value: 'IE',\n            label: 'Ireland'\n        },\n        {\n            value: 'EL',\n            label: 'Greece'\n        },\n        {\n            value: 'ES',\n            label: 'SPAIN'\n        },\n        {\n            value: 'FR',\n            label: 'France'\n        },\n        {\n            value: 'HR',\n            label: 'Croatia'\n        },\n        {\n            value: 'IT',\n            label: 'Italy'\n        },\n        {\n            value: 'CY',\n            label: 'Cyprus'\n        },\n        {\n            value: 'LV',\n            label: 'Latvia'\n        },\n        {\n            value: 'LT',\n            label: 'Lithuania'\n        },\n        {\n            value: 'LU',\n            label: 'Luxembourg'\n        },\n        {\n            value: 'HU',\n            label: 'Hungary'\n        },\n        {\n            value: 'MT',\n            label: 'Malta'\n        },\n        {\n            value: 'NL',\n            label: 'The Nederlands'\n        },\n        {\n            value: 'AT',\n            label: 'Austria'\n        },\n        {\n            value: 'PL',\n            label: 'Poland'\n        },\n        {\n            value: 'PT',\n            label: 'Portugal'\n        },\n        {\n            value: 'RO',\n            label: 'Romania'\n        },\n        {\n            value: 'Si',\n            label: 'Slovania'\n        },\n        {\n            value: 'SK',\n            label: 'Slovakia'\n        },\n        {\n            value: 'FI',\n            label: 'Finland'\n        },\n        {\n            value: 'SE',\n            label: 'Sweden'\n        },\n        {\n            value: 'UK',\n            label: 'United Kingdom'\n        },\n        {\n            value: 'ME',\n            label: 'Montenegro'\n        },\n        {\n            value: 'IS',\n            label: 'Iceland'\n        },\n        {\n            value: 'MK',\n            label: 'Macedonia'\n        },\n        {\n            value: 'AL',\n            label: 'Albania'\n        },\n        {\n            value: 'RS',\n            label: 'Serbia'\n        },\n        {\n            value: 'TR',\n            label: 'Turkey'\n        },\n        {\n            value: 'MD',\n            label: 'Moldavia'\n        },\n        {\n            value: 'AM',\n            label: 'Armenia'\n        },\n        {\n            value: 'BY',\n            label: 'Belarus'\n        },\n        {\n            value: 'AD',\n            label: 'Andorra'\n        },\n        {\n            value: 'MC',\n            label: 'Monaco'\n        },\n        {\n            value: 'SM',\n            label: 'San Marino'\n        },\n        {\n            value: 'VA',\n            label: 'Vatican City'\n        },\n        {\n            value: 'UA',\n            label: 'Ukraine'\n        },\n        {\n            value: 'XK',\n            label: 'Kosovo'\n        },\n        {\n            value: 'BA',\n            label: 'Bosnia and Herzegovina'\n        },\n        {\n            value: 'CH',\n            label: 'Switzerland'\n        },\n        {\n            value: 'LI',\n            label: 'Liechtenstein'\n        },\n        {\n            value: 'NO',\n            label: 'Norway'\n        }\n    ]\n\n    const phone_number_landcode_ARRAY = [\n        {\n            value: 'BE',\n            label: 'Belgium, +32'\n        },\n        {\n            value: 'BG',\n            label: 'Bulgaria, +359'\n        },\n        {\n            value: 'CZ',\n            label: 'Czech Republic, +420'\n        },\n        {\n            value: 'DK',\n            label: 'Denmark, +45'\n        },\n        {\n            value: 'DE',\n            label: 'Germany, +49'\n        },\n        {\n            value: 'EE',\n            label: 'Estonia, +372'\n        },\n        {\n            value: 'IE',\n            label: 'Ireland, +353'\n        },\n        {\n            value: 'EL',\n            label: 'Greece, +30'\n        },\n        {\n            value: 'ES',\n            label: 'Spain, +34'\n        },\n        {\n            value: 'FR',\n            label: 'France, +33'\n        },\n        {\n            value: 'HR',\n            label: 'Croatia, +385'\n        },\n        {\n            value: 'IT',\n            label: 'Italy, +39'\n        },\n        {\n            value: 'CY',\n            label: 'Cyprus, +357'\n        },\n        {\n            value: 'LV',\n            label: 'Latvia, +371'\n        },\n        {\n            value: 'LT',\n            label: 'Lithuania, +370'\n        },\n        {\n            value: 'LU',\n            label: 'Luxembourg, +352'\n        },\n        {\n            value: 'HU',\n            label: 'Hungary, +36'\n        },\n        {\n            value: 'MT',\n            label: 'Malta, +356'\n        },\n        {\n            value: 'NL',\n            label: 'The Nederlands, +31'\n        },\n        {\n            value: 'AT',\n            label: 'Austria, +43'\n        },\n        {\n            value: 'PL',\n            label: 'Poland, +48'\n        },\n        {\n            value: 'PT',\n            label: 'Portugal, +351'\n        },\n        {\n            value: 'RO',\n            label: 'Romania, +40'\n        },\n        {\n            value: 'Si',\n            label: 'Slovania, +386'\n        },\n        {\n            value: 'SK',\n            label: 'Slovakia, +421'\n        },\n        {\n            value: 'FI',\n            label: 'Finland, +358'\n        },\n        {\n            value: 'SE',\n            label: 'Sweden, +46'\n        },\n        {\n            value: 'UK',\n            label: 'United Kingdom, +44'\n        },\n        {\n            value: 'ME',\n            label: 'Montenegro, +382'\n        },\n        {\n            value: 'IS',\n            label: 'Iceland, +354'\n        },\n        {\n            value: 'MK',\n            label: 'Macedonia, +389'\n        },\n        {\n            value: 'AL',\n            label: 'Albania, +355'\n        },\n        {\n            value: 'RS',\n            label: 'Serbia, +381'\n        },\n        {\n            value: 'TR',\n            label: 'Turkey, +90'\n        },\n        {\n            value: 'MD',\n            label: 'Moldavia, +373'\n        },\n        {\n            value: 'AM',\n            label: 'Armenia, +374'\n        },\n        {\n            value: 'BY',\n            label: 'Belarus, +375'\n        },\n        {\n            value: 'AD',\n            label: 'Andorra, +376'\n        },\n        {\n            value: 'MC',\n            label: 'Monaco, +377'\n        },\n        {\n            value: 'SM',\n            label: 'San Marino, +378'\n        },\n        {\n            value: 'VA',\n            label: 'Vatican City, +379'\n        },\n        {\n            value: 'UA',\n            label: 'Ukraine, +380'\n        },\n        {\n            value: 'XK',\n            label: 'Kosovo, +383'\n        },\n        {\n            value: 'BA',\n            label: 'Bosnia and Herzegovina, +387'\n        },\n        {\n            value: 'CH',\n            label: 'Switzerland, +41'\n        },\n        {\n            value: 'LI',\n            label: 'Liechtenstein, +423'\n        },\n        {\n            value: 'NO',\n            label: 'Norway, +47'\n        }\n    ]\n\n    const facility_type_ARRAY = [\n        {\n            value: 'kitchen',\n            label: 'Kitchen'\n        },\n        {\n            value: 'bathroom',\n            label: 'Bathroom'\n        },\n        {\n            value: 'supermarket',\n            label: 'Supermarket'\n        },\n        {\n            value: 'fitness',\n            label: 'Fitness'\n        },\n        {\n            value: 'common_room',\n            label: 'Common room'\n        },\n        {\n            value: 'reception_office',\n            label: 'Reception / Office'\n        },\n        {\n            value: 'laundry',\n            label: 'Laundry'\n        },\n        {\n            value: 'relax',\n            label: 'Relax'\n        }\n    ]\n    \n    return (\n        <>\n            <div className='form__div'>\n                <TextField id='outlined-basic' label='Complex name' variant='outlined' />\n\n                <TextField id='outlined-basic' label='Street' variant='outlined' />\n\n                <TextField label='House number' inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }} />\n\n                <TextField id='outlined-basic' label='City' variant='outlined' />\n                \n                <InputLabel id='country__label'>Country</InputLabel>\n                <Select\n                    labelId='country__label'\n                    id='country__id'\n                    /* value={} */\n                    label='country'\n                    /* onChange={handleChange} */\n                    >\n                    {existingComplexes__array.map((item) => (\n                        <MenuItem value={item.value}>{item.label}</MenuItem>\n                        ))}\n                </Select>\n\n                <TextField label='Postal code' inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }} />\n\n                <InputLabel id='existingComplex__label'>Existing complexes</InputLabel>\n                <Select\n                    labelId='existingComplex__label'\n                    id='existingComplex__id'\n                    /* value={} */\n                    label='existingComplex'\n                    /* onChange={handleChange} */\n                    >\n                    {existingComplexes__array.map((item) => (\n                        <MenuItem value={item.value}>{item.label}</MenuItem>\n                        ))}\n                </Select>\n            </div>\n        </>\n    )\n}\n\nexport default LivingPlaceRegistrationStep2\n"]},"metadata":{},"sourceType":"module"}