{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/Lento.EU/BitBucket/lentoeu_frontend_webapp/lento-eu-react/src/html/map/GoogleMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport mapStyle from './css/MapStyle.json';\nimport './css/GoogleMap.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GoogleMap = props => {\n  _s();\n\n  let map;\n  const [mapStyle, setMapStyle] = useState([]);\n\n  const drawMarker = () => {\n    const state = {\n      cords: [{\n        latitude: 51.54015818523244,\n        longitude: 5.995251772262631\n      }]\n    };\n    return state.cords.map((store, i) => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        id: i,\n        position: {\n          lat: store.latitude,\n          lng: store.longitude\n        },\n        onClick: () => console.log(\"Event Hanlder Called\")\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, this);\n    });\n  };\n\n  useEffect(() => {\n    /* drawMarker() */\n    map = document.getElementById(\"map\");\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        id: \"map\",\n        google: props.google,\n        onReady: (mapProps, map) => this._mapLoaded(mapProps, map),\n        zoom: 15,\n        initialCenter: {\n          lat: 51.54015818523244,\n          lng: 5.995251772262631\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(GoogleMap, \"fBuRVaHIRjaSm790+FCLYJK4s1A=\");\n\n_c = GoogleMap;\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAtP9KGxPuB9C1sFEJqa9DDHSNn5UNLssI'\n})(GoogleMap);\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/Lento.EU/BitBucket/lentoeu_frontend_webapp/lento-eu-react/src/html/map/GoogleMap.js"],"names":["React","useState","useEffect","Map","Marker","GoogleApiWrapper","mapStyle","GoogleMap","props","map","setMapStyle","drawMarker","state","cords","latitude","longitude","store","i","lat","lng","console","log","document","getElementById","google","mapProps","_mapLoaded","apiKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,gBAAtB,QAA8C,mBAA9C;AAEA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAO,sBAAP;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB,MAAIC,GAAJ;AAEA,QAAM,CAACH,QAAD,EAAWI,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,UAAU,GAAG,MAAM;AACrB,UAAMC,KAAK,GAAG;AACVC,MAAAA,KAAK,EAAE,CACH;AAACC,QAAAA,QAAQ,EAAE,iBAAX;AAA8BC,QAAAA,SAAS,EAAE;AAAzC,OADG;AADG,KAAd;AAMA,WAAOH,KAAK,CAACC,KAAN,CAAYJ,GAAZ,CAAgB,CAACO,KAAD,EAAQC,CAAR,KAAc;AACrC,0BAAO,QAAC,MAAD;AAAgB,QAAA,EAAE,EAAEA,CAApB;AAAuB,QAAA,QAAQ,EAAE;AACpCC,UAAAA,GAAG,EAAEF,KAAK,CAACF,QADyB;AAEpCK,UAAAA,GAAG,EAAEH,KAAK,CAACD;AAFyB,SAAjC;AAKP,QAAA,OAAO,EAAE,MAAMK,OAAO,CAACC,GAAR,CAAY,sBAAZ;AALR,SAAaJ,CAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AAMC,KAPM,CAAP;AAQH,GAfD;;AAiBAf,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAO,IAAAA,GAAG,GAAGa,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAN;AACH,GAHQ,CAAT;AAKA,sBACI;AAAA,2BACI;AACI,MAAA,EAAE,EAAC,KADP;AAAA,6BAGI,QAAC,GAAD;AACI,QAAA,EAAE,EAAC,KADP;AAEI,QAAA,MAAM,EAAEf,KAAK,CAACgB,MAFlB;AAGI,QAAA,OAAO,EAAE,CAACC,QAAD,EAAWhB,GAAX,KAAmB,KAAKiB,UAAL,CAAgBD,QAAhB,EAA0BhB,GAA1B,CAHhC;AAII,QAAA,IAAI,EAAE,EAJV;AAKI,QAAA,aAAa,EAAE;AACXS,UAAAA,GAAG,EAAE,iBADM;AAEXC,UAAAA,GAAG,EAAE;AAFM;AALnB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAmBH,CA/CD;;GAAMZ,S;;KAAAA,S;AAiDN,eAAeF,gBAAgB,CAAC;AAC5BsB,EAAAA,MAAM,EAAE;AADoB,CAAD,CAAhB,CAEVpB,SAFU,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react'\n\nimport mapStyle from './css/MapStyle.json'\n\nimport './css/GoogleMap.scss'\n\nconst GoogleMap = (props) => {\n\n    let map\n\n    const [mapStyle, setMapStyle] = useState([])\n\n    const drawMarker = () => {\n        const state = {\n            cords: [\n                {latitude: 51.54015818523244, longitude: 5.995251772262631}\n            ]\n        }\n\n        return state.cords.map((store, i) => {\n        return <Marker key={i} id={i} position={{\n            lat: store.latitude,\n            lng: store.longitude\n        }}\n    \n        onClick={() => console.log(\"Event Hanlder Called\")} />\n        })\n    }\n\n    useEffect(() => {\n        /* drawMarker() */\n        map = document.getElementById(\"map\")\n    })\n\n    return (\n        <>\n            <div\n                id='map'\n            >\n                <Map\n                    id='map'\n                    google={props.google}\n                    onReady={(mapProps, map) => this._mapLoaded(mapProps, map)}\n                    zoom={15}\n                    initialCenter={{ \n                        lat: 51.54015818523244, \n                        lng: 5.995251772262631\n                    }}>\n                    {/* {drawMarker()} */}\n                </Map>\n            </div>\n        </>\n    )\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyAtP9KGxPuB9C1sFEJqa9DDHSNn5UNLssI'\n  })(GoogleMap)"]},"metadata":{},"sourceType":"module"}