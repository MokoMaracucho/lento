{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/Lento.EU/BitBucket/lentoeu_frontend_webapp/lento-eu-react/src/Validations/LivingPlaceRegistrationStep1.js\";\nimport React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport { InputLabel, Radio, Select } from '@material-ui/core';\nimport { FormControlLabel, FormLabel, MenuItem, RadioGroup } from '@mui/material';\nimport '../Styles/Validations/LivingPlaceRegistrationStep1.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass LivingPlaceRegistrationStep1 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.existingComplexes__array = [{\n      value: 'complex1',\n      label: 'Complex 1'\n    }, {\n      value: 'complex2',\n      label: 'Complex 2'\n    }, {\n      value: 'complex3',\n      label: 'Complex 3'\n    }, {\n      value: 'complex4',\n      label: 'Complex 4'\n    }];\n    this.residenceTypes__array = [{\n      value: 'apartment',\n      label: 'Apartment'\n    }, {\n      value: 'house',\n      label: 'House'\n    }, {\n      value: 'mobil_home',\n      label: 'Mobil home'\n    }, {\n      value: 'studio',\n      label: 'Studio'\n    }];\n    this.livingPlaceTypes__array = [{\n      value: 'bed',\n      label: 'Bed'\n    }, {\n      value: 'room',\n      label: 'Room'\n    }, {\n      value: 'residence',\n      label: 'Residence'\n    }];\n\n    this.continue = e => {\n      e.preventDefault();\n      this.props.nextStep();\n    };\n  }\n\n  render() {\n    const {\n      values,\n      handleChange\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Somes questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          children: \"Is the residence part of a complex?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          \"aria-label\": \"partOfAComplex__label\",\n          name: \"radio-buttons-group\",\n          onChange: handleChange('some_questions.part_of_acomplex'),\n          defaultValue: values.some_questions.part_of_a_complex,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"yes\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 65\n            }, this),\n            label: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"no\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 64\n            }, this),\n            label: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          children: \"Is this an existing complex or does it already exist in the platform?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          \"aria-label\": \"existingComplex__label\",\n          name: \"radio-buttons-group\",\n          onChange: handleChange('some_questions.existing_complex'),\n          defaultValue: values.some_questions.existing_complex,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"yes\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 65\n            }, this),\n            label: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"no\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 64\n            }, this),\n            label: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"existingComplex__label\",\n          children: \"Existing complexes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"existingComplex__label\",\n          id: \"existingComplex__id\",\n          label: \"existingComplex\",\n          onChange: handleChange('some_questions.existing_complex'),\n          defaultValue: values.some_questions.existing_complex,\n          children: this.existingComplexes__array.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item.value,\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"residenceType__label\",\n          children: \"Residence type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"residenceType__label\",\n          id: \"residenceType__id\",\n          label: \"residenceType\",\n          onChange: handleChange('some_questions.residence_type'),\n          defaultValue: values.some_questions.residence_type,\n          children: this.residenceTypes__array.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item.value,\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"livingPlaceType__label\",\n          children: \"Living place type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"livingPlaceType__label\",\n          id: \"livingPlaceType__id\",\n          label: \"livingPlaceType\",\n          onChange: handleChange('living_place_type'),\n          defaultValue: values.living_place_type,\n          children: this.livingPlaceTypes__array.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item.value,\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            backgroundColor: '#5398D4',\n            borderRadius: 50,\n            fontFamily: 'DMSansMedium',\n            boxShadow: 'unset'\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default LivingPlaceRegistrationStep1;\n/* TODO: Request to database */","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/Lento.EU/BitBucket/lentoeu_frontend_webapp/lento-eu-react/src/Validations/LivingPlaceRegistrationStep1.js"],"names":["React","Component","Button","InputLabel","Radio","Select","FormControlLabel","FormLabel","MenuItem","RadioGroup","LivingPlaceRegistrationStep1","existingComplexes__array","value","label","residenceTypes__array","livingPlaceTypes__array","continue","e","preventDefault","props","nextStep","render","values","handleChange","some_questions","part_of_a_complex","existing_complex","map","item","residence_type","living_place_type","backgroundColor","borderRadius","fontFamily","boxShadow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { Button } from '@material-ui/core'\nimport { InputLabel, Radio, Select } from '@material-ui/core'\nimport { FormControlLabel, FormLabel, MenuItem, RadioGroup } from '@mui/material'\n\nimport '../Styles/Validations/LivingPlaceRegistrationStep1.scss'\n\nclass LivingPlaceRegistrationStep1 extends Component {\n\n    existingComplexes__array = [\n        {\n            value: 'complex1',\n            label: 'Complex 1'\n        },\n        {\n            value: 'complex2',\n            label: 'Complex 2'\n        },\n        {\n            value: 'complex3',\n            label: 'Complex 3'\n        },\n        {\n            value: 'complex4',\n            label: 'Complex 4'\n        }\n    ]\n    \n    residenceTypes__array = [\n        {\n            value: 'apartment',\n            label: 'Apartment'\n        },\n        {\n            value: 'house',\n            label: 'House'\n        },\n        {\n            value: 'mobil_home',\n            label: 'Mobil home'\n        },\n        {\n            value: 'studio',\n            label: 'Studio'\n        }\n    ]\n    \n    livingPlaceTypes__array = [\n        {\n            value: 'bed',\n            label: 'Bed'\n        },\n        {\n            value: 'room',\n            label: 'Room'\n        },\n        {\n            value: 'residence',\n            label: 'Residence'\n        }\n    ]\n\n    continue = e => {\n        e.preventDefault()\n        this.props.nextStep()\n    }\n    \n    render() {\n\n        const { values, handleChange } = this.props\n\n        return (\n            <>\n                <div className='form__div'>\n                    <h5>Somes questions</h5>\n\n\n                    {/* PART OF A COMPLEX */}\n                    <FormLabel component='legend'>Is the residence part of a complex?</FormLabel>\n                    <RadioGroup\n                        aria-label='partOfAComplex__label'\n                        name='radio-buttons-group'\n                        onChange={handleChange('some_questions.part_of_acomplex')}\n                        defaultValue={values.some_questions.part_of_a_complex}\n                    >\n                        <FormControlLabel value='yes' control={ <Radio /> } label='Yes' />\n                        <FormControlLabel value='no' control={ <Radio /> } label='No' />\n                    </RadioGroup>\n\n\n                    {/* EXISTING COMPLEX ? */}\n                    <FormLabel component='legend'>Is this an existing complex or does it already exist in the platform?</FormLabel>\n                    <RadioGroup\n                        aria-label='existingComplex__label'\n                        name='radio-buttons-group'\n                        onChange={handleChange('some_questions.existing_complex')}\n                        defaultValue={values.some_questions.existing_complex}\n                    >\n                        <FormControlLabel value='yes' control={ <Radio /> } label='Yes' />\n                        <FormControlLabel value='no' control={ <Radio /> } label='No' />\n                    </RadioGroup>\n\n\n                    {/* CHOOSE COMPLEX */}\n                    <InputLabel id='existingComplex__label'>Existing complexes</InputLabel>\n                    <Select\n                        labelId='existingComplex__label'\n                        id='existingComplex__id'\n                        label='existingComplex'\n                        onChange={handleChange('some_questions.existing_complex')}\n                        defaultValue={values.some_questions.existing_complex}\n                    >\n                        {this.existingComplexes__array.map((item) => (\n                            <MenuItem value={item.value}>{item.label}</MenuItem>\n                            ))}\n                    </Select>\n\n\n                    {/* RESIDENCE TYPE */}\n                    <InputLabel id='residenceType__label'>Residence type</InputLabel>\n                    <Select\n                        labelId='residenceType__label'\n                        id='residenceType__id'\n                        label='residenceType'\n                        onChange={handleChange('some_questions.residence_type')}\n                        defaultValue={values.some_questions.residence_type}\n                    >\n                        {this.residenceTypes__array.map((item) => (\n                            <MenuItem value={item.value}>{item.label}</MenuItem>\n                        ))}\n                    </Select>\n\n\n                    {/* LIVING PLACE TYPE */}\n                    <InputLabel id='livingPlaceType__label'>Living place type</InputLabel>\n                    <Select\n                        labelId='livingPlaceType__label'\n                        id='livingPlaceType__id'\n                        label='livingPlaceType'\n                        onChange={handleChange('living_place_type')}\n                        defaultValue={values.living_place_type}\n                    >\n                        {this.livingPlaceTypes__array.map((item) => (\n                            <MenuItem value={item.value}>{item.label}</MenuItem>\n                        ))}\n                    </Select>\n\n\n                    <Button\n                        variant='contained'\n                        style={{\n                            backgroundColor: '#5398D4',\n                            borderRadius: 50,\n                            fontFamily: 'DMSansMedium',\n                            boxShadow: 'unset'\n                        }}\n                    >\n                        Next\n                    </Button>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default LivingPlaceRegistrationStep1\n\n/* TODO: Request to database */"]},"metadata":{},"sourceType":"module"}