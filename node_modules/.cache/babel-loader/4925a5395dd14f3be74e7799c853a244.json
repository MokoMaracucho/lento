{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Point = void 0;\n\nconst Matrix_1 = require(\"./Matrix\");\n\nclass Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  translate(x, y) {\n    this.x += x;\n    this.y += y;\n  }\n\n  clone() {\n    return new Point(this.x, this.y);\n  }\n\n  toSVG() {\n    return this.x + ' ' + this.y;\n  }\n\n  asMatrix() {\n    return new Matrix_1.Matrix([[this.x], [this.y], [1]]);\n  }\n\n  transform(matrix) {\n    let final = matrix.mmul(this.asMatrix());\n    this.x = final.get(0, 0);\n    this.y = final.get(1, 0);\n  }\n\n  static middlePoint(pointA, pointB) {\n    return new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n  }\n\n  static multiply(...matrices) {\n    let m = matrices[0];\n\n    for (let i = 1; i < matrices.length; i++) {\n      m = m.mmul(matrices[i]);\n    }\n\n    return m;\n  }\n\n  static scaleMatrix(x, y) {\n    return new Matrix_1.Matrix([[x, 0, 0], [0, y, 0], [0, 0, 1]]);\n  }\n\n  static translateMatrix(x, y) {\n    return new Matrix_1.Matrix([[1, 0, x], [0, 1, y], [0, 0, 1]]);\n  }\n\n  static rotateMatrix(deg) {\n    return new Matrix_1.Matrix([[Math.cos(deg), -1 * Math.sin(deg), 0], [Math.sin(deg), Math.cos(deg), 0], [0, 0, 1]]);\n  }\n\n  static createScaleMatrix(x, y, origin) {\n    return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.scaleMatrix(x, y), Point.translateMatrix(-origin.x, -origin.y));\n  }\n\n  static createRotateMatrix(deg, origin) {\n    return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.rotateMatrix(deg), Point.translateMatrix(-origin.x, -origin.y));\n  }\n\n}\n\nexports.Point = Point;","map":{"version":3,"sources":["../src/Point.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Point = void 0;\nconst Matrix_1 = require(\"./Matrix\");\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    translate(x, y) {\n        this.x += x;\n        this.y += y;\n    }\n    clone() {\n        return new Point(this.x, this.y);\n    }\n    toSVG() {\n        return this.x + ' ' + this.y;\n    }\n    asMatrix() {\n        return new Matrix_1.Matrix([[this.x], [this.y], [1]]);\n    }\n    transform(matrix) {\n        let final = matrix.mmul(this.asMatrix());\n        this.x = final.get(0, 0);\n        this.y = final.get(1, 0);\n    }\n    static middlePoint(pointA, pointB) {\n        return new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n    }\n    static multiply(...matrices) {\n        let m = matrices[0];\n        for (let i = 1; i < matrices.length; i++) {\n            m = m.mmul(matrices[i]);\n        }\n        return m;\n    }\n    static scaleMatrix(x, y) {\n        return new Matrix_1.Matrix([\n            [x, 0, 0],\n            [0, y, 0],\n            [0, 0, 1]\n        ]);\n    }\n    static translateMatrix(x, y) {\n        return new Matrix_1.Matrix([\n            [1, 0, x],\n            [0, 1, y],\n            [0, 0, 1]\n        ]);\n    }\n    static rotateMatrix(deg) {\n        return new Matrix_1.Matrix([\n            [Math.cos(deg), -1 * Math.sin(deg), 0],\n            [Math.sin(deg), Math.cos(deg), 0],\n            [0, 0, 1]\n        ]);\n    }\n    static createScaleMatrix(x, y, origin) {\n        return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.scaleMatrix(x, y), Point.translateMatrix(-origin.x, -origin.y));\n    }\n    static createRotateMatrix(deg, origin) {\n        return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.rotateMatrix(deg), Point.translateMatrix(-origin.x, -origin.y));\n    }\n}\nexports.Point = Point;\n//# sourceMappingURL=Point.js.map"]},"metadata":{},"sourceType":"script"}