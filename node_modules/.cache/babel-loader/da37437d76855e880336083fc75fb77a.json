{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/Lento.EU/src/diagram/Diagram.js\";\nimport React from 'react';\nimport createEngine, { DefaultLinkModel, DefaultNodeModel, DiagramModel } from '@projectstorm/react-diagrams';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport './css/Diagram.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Diagram = props => {\n  const engine = createEngine();\n  const node1 = new DefaultNodeModel({\n    name: 'Node 1',\n    color: 'rgb(0,192,255)'\n  });\n  node1.setPosition(100, 100);\n  let port1 = node1.addOutPort('Out');\n  const node2 = new DefaultNodeModel({\n    name: 'Node 1',\n    color: 'rgb(0,192,255)'\n  });\n  node2.setPosition(100, 100);\n  let port2 = node2.addOutPort('Out');\n  const link = port1.link < DefaultLinkModel > port2;\n  /* link.addLabel('Hello World!') */\n\n  const model = new DiagramModel();\n  model.addAll(node1, node2, link);\n  engine.setModel(model);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CanvasWidget, {\n      engine: engine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = Diagram;\nexport default Diagram;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diagram\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/Lento.EU/src/diagram/Diagram.js"],"names":["React","createEngine","DefaultLinkModel","DefaultNodeModel","DiagramModel","CanvasWidget","Diagram","props","engine","node1","name","color","setPosition","port1","addOutPort","node2","port2","link","model","addAll","setModel"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,IAAuBC,gBAAvB,EAAyCC,gBAAzC,EAA2DC,YAA3D,QAA+E,8BAA/E;AAEA,SAASC,YAAT,QAA6B,iCAA7B;AAEA,OAAO,oBAAP;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAMC,MAAM,GAAGP,YAAY,EAA3B;AAEA,QAAMQ,KAAK,GAAG,IAAIN,gBAAJ,CAAqB;AAAEO,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAArB,CAAd;AACAF,EAAAA,KAAK,CAACG,WAAN,CAAkB,GAAlB,EAAuB,GAAvB;AACA,MAAIC,KAAK,GAAGJ,KAAK,CAACK,UAAN,CAAiB,KAAjB,CAAZ;AACA,QAAMC,KAAK,GAAG,IAAIZ,gBAAJ,CAAqB;AAAEO,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAArB,CAAd;AACAI,EAAAA,KAAK,CAACH,WAAN,CAAkB,GAAlB,EAAuB,GAAvB;AACA,MAAII,KAAK,GAAGD,KAAK,CAACD,UAAN,CAAiB,KAAjB,CAAZ;AAEA,QAAMG,IAAI,GAAGJ,KAAK,CAACI,IAAN,GAAWf,gBAAX,GAA6Bc,KAA1C;AACA;;AAEA,QAAME,KAAK,GAAG,IAAId,YAAJ,EAAd;AACAc,EAAAA,KAAK,CAACC,MAAN,CAAaV,KAAb,EAAoBM,KAApB,EAA2BE,IAA3B;AACAT,EAAAA,MAAM,CAACY,QAAP,CAAgBF,KAAhB;AAEA,sBACI;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEV;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CAvBD;;KAAMF,O;AAyBN,eAAeA,OAAf","sourcesContent":["import React from 'react'\n\nimport createEngine, { DefaultLinkModel, DefaultNodeModel, DiagramModel } from '@projectstorm/react-diagrams'\n\nimport { CanvasWidget } from '@projectstorm/react-canvas-core'\n\nimport './css/Diagram.scss'\n\nconst Diagram = (props) => {\n\n    const engine = createEngine()\n\n    const node1 = new DefaultNodeModel({ name: 'Node 1', color: 'rgb(0,192,255)' })\n    node1.setPosition(100, 100)\n    let port1 = node1.addOutPort('Out')\n    const node2 = new DefaultNodeModel({ name: 'Node 1', color: 'rgb(0,192,255)' })\n    node2.setPosition(100, 100)\n    let port2 = node2.addOutPort('Out')\n\n    const link = port1.link<DefaultLinkModel>(port2)\n    /* link.addLabel('Hello World!') */\n\n    const model = new DiagramModel()\n    model.addAll(node1, node2, link)\n    engine.setModel(model)\n\n    return (\n        <>\n            <CanvasWidget engine={engine} />\n        </>\n    )\n}\n\nexport default Diagram"]},"metadata":{},"sourceType":"module"}